{"version":3,"sources":["../node_modules/@skyra/discord-components-core/dist/esm/options-e1c0ed35.js","../node_modules/@skyra/discord-components-core/dist/esm/discord-action-row_29.entry.js"],"names":["_a","_b","_c","_d","_e","_f","_g","_h","_j","defaultDiscordAvatars","blue","gray","green","orange","red","pink","globalAvatars","window","$discordMessage","avatars","Object","assign","default","profiles","defaultTheme","defaultMode","defaultBackground","DiscordActionRow","hostRef","registerInstance","this","h","Host","class","style","formatDate","value","Date","split","month","day","year","padStart","padZeroes","getMonth","getDate","getFullYear","formatTime","hour24","getHours","getMinutes","toString","hour","meridiem","handleTimestamp","useTime","TypeError","IMAGE_EXTENSION","getGlobalEmojiUrl","emojiName","emojis","DiscordAttachment","alt","url","test","Error","validateImageExtension","height","width","src","getElement","DiscordAttachments","DiscordBold","Fragment","_props","children","LaunchIcon","props","viewBox","fill","d","DiscordButton","disabled","type","includes","RangeError","el","parentElement","tagName","toLowerCase","content","emoji","draggable","href","target","rel","CommandIcon","xmlns","DiscordCommand","author","parent","defaultData","bot","verified","server","roleColor","profileData","Reflect","get","profile","avatar","resolveAvatar","messageParent","compactMode","color","command","DiscordCustomEmoji","Boolean","name","emojiFromGlobal","embedEmoji","emojiClassName","emojiImageClassName","r","e","t","f","n","Array","isArray","length","clsx","arguments","DiscordEmbed","hasPerformedRerenderChecks","hasProvidedDescriptionSlot","discordEmbedDescriptionChild","querySelector","innerHTML","trim","emojiParsedAuthorName","parseTitle","authorName","emojiParsedEmbedTitle","embedTitle","provider","authorImage","authorUrl","image","video","renderMedia","thumbnail","controls","muted","preload","poster","title","words","map","word","idx","DiscordEmbedDescription","DiscordEmbedField","inline","inlineIndex","validInlineIndices","Set","has","Number","checkInlineIndex","SyntaxError","emojiParsedEmbedFieldTitle","fieldTitle","DiscordEmbedFields","DiscordEmbedFooter","isNaN","getTime","timestamp","updateTimestamp","footerImage","DiscordInlineCode","GuildBadge","PartnerBadgeOverlay","VerifiedBadgeOverlay","DiscordInvite","icon","online","members","partnered","inviteTitle","joinBtn","toLocaleString","DiscordItalic","hexToDecimal","hex","parseInt","formatRgb","decimalObject","parameterA","g","b","parsedA","a","parseFloat","isFinite","concat","build","hashlessHex","charAt","slice","removeHash","_ref","toFixed","hexesToDecimals","nakedHex","isShort","parseHex","ChannelThread","LockedVoiceChannel","VoiceChannel","ChannelIcon","ChannnelForum","DiscordMention","highlight","handleType","addEventListener","setHoverColor","bind","resetHoverColor","removeEventListener","backgroundColor","colorStyle","mentionPrepend","VerifiedTick","AuthorInfo","op","roleIcon","roleName","compact","Ephemeral","DiscordMessage","edited","ephemeral","twentyFour","_k","_l","_m","_o","_p","_q","_r","_s","_t","highlightMention","from","some","child","hasThread","DiscordMessages","lightTheme","noBackground","DiscordQuote","DiscordReaction","count","reacted","interactive","onClick","handleReactionClick","event","shiftKey","DiscordReactions","AttachmentReply","CommandReply","ReplyIcon","DiscordReply","attachment","mentions","DiscordSpoiler","Boost","DMCall","DMEdit","DMMissedCall","SystemAlert","SystemError","Thread","UserJoin","UserLeave","stroke","DiscordSystemMessage","channelName","DiscordTenorVideo","autoplay","loop","DiscordThread","cta","DiscordThreadMessage","relativeTimestamp","DiscordTime","DiscordUnderlined"],"mappings":"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","file":"static/js/0.104957ab.chunk.js","sourcesContent":["var _a, _b, _c, _d, _e, _f, _g, _h, _j;\nconst defaultDiscordAvatars = {\n  blue: 'https://cdn.discordapp.com/embed/avatars/0.png',\n  gray: 'https://cdn.discordapp.com/embed/avatars/1.png',\n  green: 'https://cdn.discordapp.com/embed/avatars/2.png',\n  orange: 'https://cdn.discordapp.com/embed/avatars/3.png',\n  red: 'https://cdn.discordapp.com/embed/avatars/4.png',\n  pink: 'https://cdn.discordapp.com/embed/avatars/5.png'\n};\nconst globalAvatars = (_b = (_a = window.$discordMessage) === null || _a === void 0 ? void 0 : _a.avatars) !== null && _b !== void 0 ? _b : {};\nconst avatars = Object.assign(defaultDiscordAvatars, globalAvatars, {\n  default: (_d = (_c = defaultDiscordAvatars[globalAvatars.default]) !== null && _c !== void 0 ? _c : globalAvatars.default) !== null && _d !== void 0 ? _d : defaultDiscordAvatars.blue\n});\nconst profiles = (_f = (_e = window.$discordMessage) === null || _e === void 0 ? void 0 : _e.profiles) !== null && _f !== void 0 ? _f : {};\nconst defaultTheme = ((_g = window.$discordMessage) === null || _g === void 0 ? void 0 : _g.defaultTheme) === 'light' ? 'light' : 'dark';\nconst defaultMode = ((_h = window.$discordMessage) === null || _h === void 0 ? void 0 : _h.defaultMode) === 'compact' ? 'compact' : 'cozy';\nconst defaultBackground = ((_j = window.$discordMessage) === null || _j === void 0 ? void 0 : _j.defaultBackground) === 'none' ? 'none' : 'discord';\n\nexport { avatars as a, defaultTheme as b, defaultMode as c, defaultDiscordAvatars as d, defaultBackground as e, profiles as p };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-0ed7c012.js';\nimport { p as profiles, a as avatars, d as defaultDiscordAvatars, b as defaultTheme, c as defaultMode, e as defaultBackground } from './options-e1c0ed35.js';\n\nconst discordActionRowCss = \".discord-action-row{display:flex;flex-wrap:nowrap}\";\n\nconst DiscordActionRow = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-action-row\" }, h(\"slot\", null)));\n  }\n};\nDiscordActionRow.style = discordActionRowCss;\n\nconst padZeroes = (value) => {\n  const [month, day, year] = value.split('/');\n  return `${month.padStart(2, '0')}/${day.padStart(2, '0')}/${year}`;\n};\nconst formatDate = (value) => {\n  if (!(value instanceof Date))\n    return value;\n  return padZeroes(`${value.getMonth() + 1}/${value.getDate()}/${value.getFullYear()}`);\n};\nconst formatTime = (value, hour24 = false) => {\n  if (!(value instanceof Date))\n    return value;\n  if (hour24)\n    return `${value.getHours()}:${value.getMinutes().toString().padStart(2, '0')}`;\n  const hour = value.getHours() % 12 || 12;\n  const meridiem = value.getHours() < 12 ? 'AM' : 'PM';\n  return `${hour}:${value.getMinutes().toString().padStart(2, '0')} ${meridiem}`;\n};\nconst handleTimestamp = (value, useTime = false, hour24 = false) => {\n  if (!(value instanceof Date) && typeof value !== 'string') {\n    throw new TypeError('Timestamp prop must be a Date object or a string.');\n  }\n  return useTime ? formatTime(value, hour24) : formatDate(value);\n};\nconst IMAGE_EXTENSION = /\\.(bmp|jpe?g|png|gif|webp|tiff)$/i;\nconst validateImageExtension = (url) => {\n  if (!IMAGE_EXTENSION.test(url))\n    throw new Error(`The url of an image for discord-attachment should match the regex ${IMAGE_EXTENSION}`);\n};\nconst getGlobalEmojiUrl = (emojiName) => { var _a, _b; return (_b = (_a = window.$discordMessage) === null || _a === void 0 ? void 0 : _a.emojis) === null || _b === void 0 ? void 0 : _b[emojiName]; };\n\nconst discordAttachmentCss = \".discord-attachment{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-attachment .discord-image-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:3px}\";\n\nconst DiscordAttachment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The alt text to show in case the image was unable to load\n     * @default 'discord attachment'\n     */\n    this.alt = 'discord attachment';\n  }\n  componentWillRender() {\n    validateImageExtension(this.url);\n  }\n  render() {\n    return (h(Host, { class: \"discord-attachment\" }, h(\"div\", { class: \"discord-image-wrapper\", style: { height: `${this.height}px`, width: `${this.width}px` } }, h(\"img\", { alt: this.alt, src: this.url, height: this.height, width: this.width }))));\n  }\n  get el() { return getElement(this); }\n};\nDiscordAttachment.style = discordAttachmentCss;\n\nconst discordAttachmentsCss = \".discord-message .discord-attachments{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;text-indent:0;min-height:0;min-width:0;padding-top:0.125rem;padding-bottom:0.125rem;position:relative}.discord-message .discord-attachments>*{justify-self:start;-ms-flex-item-align:start;align-self:start}\";\n\nconst DiscordAttachments = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-attachments\" }, h(\"slot\", null)));\n  }\n};\nDiscordAttachments.style = discordAttachmentsCss;\n\nconst DiscordBold = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(\"strong\", null, h(\"slot\", null)));\n  }\n};\n\nfunction Fragment(_props, children) {\n  return [...children];\n}\n\nfunction LaunchIcon(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M10 5V3H5.375C4.06519 3 3 4.06519 3 5.375V18.625C3 19.936 4.06519 21 5.375 21H18.625C19.936 21 21 19.936 21 18.625V14H19V19H5V5H10Z\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M21 2.99902H14V4.99902H17.586L9.29297 13.292L10.707 14.706L19 6.41302V9.99902H21V2.99902Z\" })));\n}\n\nconst discordButtonCss = \".discord-button{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:4px 8px 4px 0;padding:2px 16px;width:auto;height:32px;min-width:60px;min-height:32px;-webkit-transition:background-color 0.17s ease, color 0.17s ease;transition:background-color 0.17s ease, color 0.17s ease;border-radius:3px;font-size:14px;font-weight:500;line-height:16px;text-decoration:none !important}.discord-button.discord-button-success{color:#fff;background-color:#3ba55d}.discord-button.discord-button-success.discord-button-hoverable:hover{background-color:#2d7d46}.discord-button.discord-button-destructive{color:#fff;background-color:#ed4245}.discord-button.discord-button-destructive.discord-button-hoverable:hover{background-color:#c03537}.discord-button.discord-button-primary{color:#fff;background-color:#5865f2}.discord-button.discord-button-primary.discord-button-hoverable:hover{background-color:#4752c4}.discord-button.discord-button-secondary{color:#fff;background-color:#4f545c}.discord-button.discord-button-secondary.discord-button-hoverable:hover{background-color:#5d6269}.discord-button.discord-button-disabled{cursor:not-allowed;opacity:0.5}.discord-button .discord-button-launch{margin-left:8px}.discord-button .discord-button-emoji{margin-right:4px;object-fit:contain;width:1.375em;height:1.375em;vertical-align:bottom}\";\n\nconst DiscordButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The name of the emoji used in the button.\n     */\n    this.emojiName = 'emoji';\n    /**\n     * Whether to show the button as disabled.\n     */\n    this.disabled = false;\n    /**\n     * The type of button this is, this will change the color of the button.\n     * Valid values: `primary`, `secondary`, `success`, `destructive`.\n     */\n    this.type = 'secondary';\n  }\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordButton `type` prop must be a string.');\n    }\n    else if (!['primary', 'secondary', 'success', 'destructive'].includes(value)) {\n      throw new RangeError(\"DiscordButton `type` prop must be one of: 'primary', 'secondary', 'success', 'destructive'\");\n    }\n  }\n  render() {\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-action-row') {\n      throw new Error('All <discord-button> components must be direct children of <discord-action-row>.');\n    }\n    const content = (h(Fragment, null, this.emoji && h(\"img\", { src: this.emoji, alt: this.emojiName, draggable: false, class: \"discord-button-emoji\" }), h(\"span\", null, h(\"slot\", null)), this.url && h(LaunchIcon, { class: \"discord-button-launch\" })));\n    return this.url && !this.disabled ? (h(\"a\", { class: \"discord-button discord-button-secondary\", href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, content)) : (h(Host, { class: `discord-button discord-button-${this.type} discord-button-${this.disabled ? 'disabled' : 'hoverable'}` }, content));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"handleType\"]\n  }; }\n};\nDiscordButton.style = discordButtonCss;\n\nfunction CommandIcon(props) {\n  return (h(\"svg\", Object.assign({}, props, { width: \"6\", height: \"10\", viewBox: \"0 0 6 10\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }),\n    h(\"path\", { d: \"M4.61241 0L6 0.845294L1.38759 10L0 9.15471L4.61241 0Z\", fill: \"currentColor\" })));\n}\n\nconst discordCommandCss = \".discord-replied-message.discord-executed-command .discord-command-name{color:#00aff4;font-weight:500}.discord-replied-message.discord-executed-command .discord-command-name:hover{color:#00aff4;text-decoration:underline}.discord-replied-message.discord-executed-command .discord-replied-message-username{margin-right:0}.discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64;font-weight:500;color:#fff}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:16px;margin-right:0.25rem}.discord-compact-mode .discord-message .discord-author-info{margin-right:0}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1em;font-weight:500}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.625em;margin-left:4px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-message .discord-author-info .discord-author-role-icon{margin-left:0.25rem;vertical-align:top;height:calc(1rem + 4px);width:calc(1rem + 4px)}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:10px;padding-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag-verified{margin-right:0.7em;margin-left:-0.7em}\";\n\nconst DiscordCommand = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The message author's username.\n     * @default 'User'\n     */\n    this.author = 'User';\n  }\n  render() {\n    var _a, _b, _c;\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\n      throw new Error('All <discord-command> components must be direct children of <discord-message>.');\n    }\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : avatars.default; };\n    const defaultData = { author: this.author, bot: false, verified: false, server: false, roleColor: this.roleColor };\n    const profileData = (_a = Reflect.get(profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\n    const messageParent = parent.parentElement;\n    return (h(Host, { class: \"discord-replied-message discord-executed-command\" }, messageParent.compactMode ? (h(\"div\", { class: \"discord-reply-badge\" }, h(CommandIcon, null))) : (h(\"img\", { class: \"discord-replied-message-avatar\", src: profile.avatar, alt: profile.author })), h(\"span\", { class: \"discord-replied-message-username\", style: { color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : '' } }, profile.author), ' used ', h(\"div\", { class: \"discord-replied-message-content discord-command-name\" }, this.command)));\n  }\n  get el() { return getElement(this); }\n};\nDiscordCommand.style = discordCommandCss;\n\nconst discordCustomEmojiCss = \".discord-custom-emoji{display:inline-block;cursor:pointer}.discord-custom-emoji .discord-custom-emoji-image{object-fit:contain;width:1.375rem;height:1.375rem;vertical-align:bottom}.discord-embed-custom-emoji{display:inline-block}.discord-embed-custom-emoji .discord-embed-custom-emoji-image{width:18px;height:18px;vertical-align:bottom}\";\n\nconst DiscordCustomEmoji = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillRender() {\n    var _a, _b, _c, _d;\n    if (!this.url && Boolean(this.name)) {\n      const emojiFromGlobal = getGlobalEmojiUrl(this.name);\n      if (emojiFromGlobal) {\n        (_a = this.url) !== null && _a !== void 0 ? _a : (this.url = (_b = emojiFromGlobal.url) !== null && _b !== void 0 ? _b : '');\n        (_c = this.embedEmoji) !== null && _c !== void 0 ? _c : (this.embedEmoji = (_d = emojiFromGlobal.embedEmoji) !== null && _d !== void 0 ? _d : false);\n      }\n    }\n  }\n  render() {\n    const name = `:${this.name}:`;\n    const emojiClassName = this.embedEmoji ? 'discord-embed-custom-emoji' : 'discord-custom-emoji';\n    const emojiImageClassName = this.embedEmoji ? 'discord-embed-custom-emoji-image' : 'discord-custom-emoji-image';\n    return (h(\"span\", { class: emojiClassName }, h(\"img\", { \"aria-label\": name, src: this.url, alt: name, draggable: false, class: emojiImageClassName })));\n  }\n  get el() { return getElement(this); }\n};\nDiscordCustomEmoji.style = discordCustomEmojiCss;\n\nfunction r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}\n\nconst discordEmbedCss = \".discord-embed{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-light-theme .discord-embed{color:#2e3338}.discord-embed .discord-left-border{background-color:#202225;border-radius:4px 0 0 4px;flex-shrink:0;width:4px}.discord-light-theme .discord-embed .discord-left-border{background-color:#e3e5e8}.discord-embed .discord-embed-root{display:grid;grid-auto-flow:row;grid-row-gap:0.25rem;min-height:0;min-width:0;text-indent:0}.discord-embed .discord-embed-wrapper{background-color:#2f3136;max-width:520px;border:1px solid rgba(46, 48, 54, 0.6);border-radius:0 4px 4px 0;justify-self:start;align-self:start;display:grid;box-sizing:border-box}.discord-light-theme .discord-embed .discord-embed-wrapper{background-color:rgba(249, 249, 249, 0.3);border-color:rgba(205, 205, 205, 0.3)}.discord-embed .discord-embed-wrapper .discord-embed-grid{display:inline-grid;grid-template-columns:auto -webkit-min-content;grid-template-columns:auto min-content;grid-template-columns:auto;grid-template-rows:auto;padding:0.5rem 1rem 1rem 0.75rem}.discord-embed .discord-embed-thumbnail{border-radius:4px;flex-shrink:0;grid-column:2/2;grid-row:1/8;justify-self:end;margin-left:16px;margin-top:8px;max-height:80px;max-width:80px;object-fit:contain;object-position:top center}.discord-embed .discord-embed-author{-webkit-box-align:center;align-items:center;color:#fff;font-size:14px;display:flex;font-weight:600;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-light-theme .discord-embed .discord-embed-author{color:#4f545c}.discord-embed .discord-embed-author a{color:#fff;font-weight:600}.discord-light-theme .discord-embed .discord-embed-author a{color:#4f545c}.discord-embed .discord-embed-author .discord-author-image{border-radius:50%;height:24px;margin-right:8px;width:24px}.discord-embed .discord-embed-provider{font-size:0.75rem;line-height:1rem;font-weight:400;grid-column:1/1;margin-top:8px;unicode-bidi:plaintext;text-align:left}.discord-light-theme .discord-embed .discord-embed-provider{color:#4f545c}.discord-embed .discord-embed-title{-webkit-box-align:center;align-items:center;color:#fff;display:inline-block;font-size:1rem;font-weight:600;grid-column:1 / 1;margin-top:8px;min-width:0}.discord-embed .discord-embed-title a{color:#00aff4;font-weight:600}.discord-embed .discord-embed-image{border-radius:4px;max-width:100%}.discord-embed .discord-embed-media{border-radius:4px;contain:paint;display:block;grid-column:1/1;margin-top:16px}.discord-embed .discord-embed-media.discord-embed-media-video{height:225px}.discord-embed .discord-embed.media .discord-embed-image{overflow:hidden;position:relative;user-select:text}.discord-embed .discord-embed-media .discord-embed-video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;width:400px;height:225px;left:0px;top:0px}.discord-embed-custom-emoji{display:inline-block}.discord-embed-custom-emoji .discord-embed-custom-emoji-image{width:18px;height:18px;vertical-align:bottom}\";\n\nconst DiscordEmbed = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hasPerformedRerenderChecks = 'pristine';\n    this.hasProvidedDescriptionSlot = true;\n  }\n  componentDidRender() {\n    if (this.hasPerformedRerenderChecks === 'pristine') {\n      try {\n        const discordEmbedDescriptionChild = this.el.querySelector('.discord-embed-description');\n        this.hasProvidedDescriptionSlot = Boolean(discordEmbedDescriptionChild === null || discordEmbedDescriptionChild === void 0 ? void 0 : discordEmbedDescriptionChild.innerHTML.trim());\n      }\n      finally {\n        this.hasPerformedRerenderChecks = 'dirty';\n      }\n    }\n  }\n  render() {\n    const emojiParsedAuthorName = this.parseTitle(this.authorName);\n    const emojiParsedEmbedTitle = this.parseTitle(this.embedTitle);\n    return (h(\"div\", { class: \"discord-embed\" }, h(\"div\", { style: { 'background-color': this.color }, class: \"discord-left-border\" }), h(\"div\", { class: \"discord-embed-root\" }, h(\"div\", { class: \"discord-embed-wrapper\" }, h(\"div\", { class: \"discord-embed-grid\" }, this.provider && (h(\"div\", { class: \"discord-embed-provider\" }, h(Fragment, null, this.provider))), emojiParsedAuthorName && (h(\"div\", { class: \"discord-embed-author\" }, this.authorImage ? h(\"img\", { src: this.authorImage, alt: \"\", class: \"discord-author-image\" }) : '', this.authorUrl ? (h(\"a\", { href: this.authorUrl, target: \"_blank\", rel: \"noopener noreferrer\" }, ...emojiParsedAuthorName)) : (h(Fragment, null, ...emojiParsedAuthorName)))), emojiParsedEmbedTitle && (h(\"div\", { class: \"discord-embed-title\" }, this.url ? (h(\"a\", { href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, ...emojiParsedEmbedTitle)) : (h(Fragment, null, ...emojiParsedEmbedTitle)))), this.hasProvidedDescriptionSlot && h(\"slot\", { name: \"description\" }), h(\"slot\", { name: \"fields\" }), this.image || this.video ? (h(\"div\", { class: clsx('discord-embed-media', { 'discord-embed-media-video': Boolean(this.video) }) }, this.renderMedia())) : null, this.thumbnail ? h(\"img\", { src: this.thumbnail, alt: \"\", class: \"discord-embed-thumbnail\" }) : '', h(\"slot\", { name: \"footer\" }))))));\n  }\n  renderMedia() {\n    if (this.video) {\n      return (h(\"video\", { controls: true, muted: true, preload: \"none\", poster: this.image, src: this.video, height: \"225\", width: \"400\", class: \"discord-embed-video\" }, h(\"img\", { src: this.image, alt: \"Discord embed media\", class: \"discord-embed-image\" })));\n    }\n    else if (this.image) {\n      return h(\"img\", { src: this.image, alt: \"Discord embed media\", class: \"discord-embed-image\" });\n    }\n    return null;\n  }\n  parseTitle(title) {\n    if (!title)\n      return null;\n    const words = title.split(' ');\n    return words.map((word, idx) => {\n      var _a;\n      const emoji = (_a = getGlobalEmojiUrl(word)) !== null && _a !== void 0 ? _a : {};\n      let el = '';\n      if (emoji.name) {\n        el = (h(\"span\", { class: \"discord-embed-custom-emoji\" }, h(\"img\", { src: emoji.url, alt: emoji.name, class: \"discord-embed-custom-emoji-image\" }), h(\"span\", null, \"\\u00A0\")));\n      }\n      else {\n        el = idx < words.length - 1 ? `${word} ` : word;\n      }\n      return el;\n    });\n  }\n  get el() { return getElement(this); }\n};\nDiscordEmbed.style = discordEmbedCss;\n\nconst discordEmbedDescriptionCss = \".discord-embed .discord-embed-description{font-size:0.875rem;font-weight:400;grid-column:1/1;line-height:1.125rem;margin-top:8px;min-width:0;white-space:pre-line}.discord-embed .discord-embed-description code{background-color:#202225;padding:2.5px;border-radius:3px}.discord-light-theme .discord-embed-description code{background-color:#e3e5e8}.discord-embed .discord-embed-description code.multiline{display:block;padding:7px;border-radius:4px;white-space:break-spaces}.discord-embed .discord-embed-description pre{margin:0;margin-top:6px}.discord-embed .discord-embed-description img.emoji{width:22px;height:22px}.discord-embed .discord-embed-description blockquote{position:relative;padding:0 8px 0 12px;margin:0}.discord-embed .discord-embed-description blockquote::before{content:'';display:block;position:absolute;left:0;height:100%;width:4px;border-radius:4px;background-color:#4f545c}.discord-light-theme .discord-embed-description blockquote::before{background-color:#c7ccd1}.discord-embed .discord-embed-description .spoiler{background-color:#202225;color:transparent;cursor:pointer}.discord-light-theme .discord-embed .discord-embed-description .spoiler{background-color:#b9bbbe}.discord-embed .discord-embed-description .spoiler:hover{background-color:rgba(32, 34, 37, 0.8)}.discord-light-theme .discord-embed .discord-embed-description .spoiler:hover{background-color:rgba(185, 187, 190, 0.8)}.discord-embed .discord-embed-description .spoiler:active{color:inherit;background-color:hsla(0, 0%, 100%, 0.1)}.discord-light-theme .discord-embed .discord-embed-description .spoiler:active{background-color:rgba(0, 0, 0, 0.1)}\";\n\nconst DiscordEmbedDescription = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'div') {\n      throw new Error('All <discord-embed-description> components must be direct children of <discord-embed>.');\n    }\n    return (h(Host, { class: \"discord-embed-description\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n};\nDiscordEmbedDescription.style = discordEmbedDescriptionCss;\n\nconst discordEmbedFieldCss = \".discord-embed .discord-embed-field{font-size:0.875rem;line-height:1.125rem;min-width:0;font-weight:400;grid-column:1/13}.discord-embed .discord-embed-field .discord-field-title{color:#ffffff;font-weight:600;font-size:0.875rem;line-height:1.125rem;min-width:0;margin-bottom:2px}.discord-embed .discord-embed-field.discord-inline-field{flex-grow:1;flex-basis:auto;min-width:150px}.discord-light-theme .discord-embed .discord-embed-field .discord-field-title{color:#747f8d}.discord-embed-inline-field-3{grid-column:9/13 !important}.discord-embed-inline-field-2{grid-column:5/9 !important}.discord-embed-inline-field-1{grid-column:1/5 !important}\";\n\nconst DiscordEmbedField = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Whether this field should be displayed inline or not.\n     */\n    this.inline = false;\n    /**\n     * The index of this inline field\n     * @remark This defines the position of this inline field. 1 is left, 2 is middle and 3 is right.\n     * @oneof [1, 2, 3]\n     * @default 1\n     */\n    this.inlineIndex = 1;\n    this.validInlineIndices = new Set([1, 2, 3]);\n  }\n  checkInlineIndex(value) {\n    if (!this.validInlineIndices.has(Number(value)))\n      throw new RangeError('DiscordEmbedField `inlineIndex` prop must be one of: 1, 2, or 3');\n  }\n  componentWillRender() {\n    this.checkInlineIndex(this.inlineIndex);\n  }\n  render() {\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-embed-fields') {\n      throw new SyntaxError('All <discord-embed-field> components must be direct children of <discord-embed-fields>.');\n    }\n    const emojiParsedEmbedFieldTitle = this.parseTitle(this.fieldTitle);\n    return (h(Host, { class: clsx({\n        'discord-embed-inline-field': this.inline,\n        'discord-embed-inline-field-1': this.inline && this.inlineIndex === 1,\n        'discord-embed-inline-field-2': this.inline && this.inlineIndex === 2,\n        'discord-embed-inline-field-3': this.inline && this.inlineIndex === 3\n      }, 'discord-embed-field') }, emojiParsedEmbedFieldTitle && h(\"div\", { class: \"discord-field-title\" }, [...emojiParsedEmbedFieldTitle]), h(\"slot\", null)));\n  }\n  parseTitle(title) {\n    if (!title)\n      return null;\n    const words = title.split(' ');\n    return words.map((word, idx) => {\n      var _a;\n      const emoji = (_a = getGlobalEmojiUrl(word)) !== null && _a !== void 0 ? _a : {};\n      let el = '';\n      if (emoji.name) {\n        el = (h(\"span\", { class: \"discord-embed-custom-emoji\" }, h(\"img\", { src: emoji.url, alt: emoji.name, class: \"discord-embed-custom-emoji-image\" }), h(\"span\", null, \"\\u00A0\")));\n      }\n      else {\n        el = idx < words.length - 1 ? `${word} ` : word;\n      }\n      return el;\n    });\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"inlineIndex\": [\"checkInlineIndex\"]\n  }; }\n};\nDiscordEmbedField.style = discordEmbedFieldCss;\n\nconst discordEmbedFieldsCss = \".discord-embed .discord-embed-fields{display:grid;grid-column:1/1;margin-top:8px;grid-gap:8px}\";\n\nconst DiscordEmbedFields = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-embed-fields\" }, h(\"slot\", null)));\n  }\n};\nDiscordEmbedFields.style = discordEmbedFieldsCss;\n\nconst discordEmbedFooterCss = \".discord-embed-footer{-webkit-box-align:center;align-items:center;color:#dcddde;display:flex;font-size:12px;line-height:16px;font-weight:500;grid-column:1/3;grid-row:auto/auto;margin-top:8px}.discord-embed-footer .discord-footer-image{border-radius:50%;flex-shrink:0;height:20px;margin-right:8px;width:20px}.discord-embed-footer .discord-footer-separator{color:#dcddde;font-weight:500;display:inline-block;margin:0 4px}.discord-light-theme .discord-embed-footer .discord-footer-separator{color:#e4e4e4}\";\n\nconst DiscordEmbedFooter = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  updateTimestamp(value) {\n    if (!value || isNaN(new Date(value).getTime()))\n      return null;\n    return handleTimestamp(new Date(value));\n  }\n  componentWillRender() {\n    this.timestamp = this.updateTimestamp(this.timestamp);\n  }\n  render() {\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'div') {\n      throw new Error('All <discord-embed-footer> components must be direct children of <discord-embed>.');\n    }\n    return (h(Host, { class: \"discord-embed-footer\" }, this.footerImage ? h(\"img\", { src: this.footerImage, alt: \"\", class: \"discord-footer-image\" }) : '', h(Fragment, null, h(\"slot\", null), this.timestamp ? h(\"span\", { class: \"discord-footer-separator\" }, \"\\u2022\") : '', this.timestamp ? h(Fragment, null, this.timestamp) : '')));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"timestamp\": [\"updateTimestamp\"]\n  }; }\n};\nDiscordEmbedFooter.style = discordEmbedFooterCss;\n\nconst DiscordInlineCode = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(\"code\", null, h(\"slot\", null)));\n  }\n};\n\nfunction GuildBadge(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" }),\n    h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", d: \"m16 7.6c0 .79-1.28 1.38-1.52 2.09s.44 2 0 2.59-1.84.35-2.46.8-.79 1.84-1.54 2.09-1.67-.8-2.47-.8-1.75 1-2.47.8-.92-1.64-1.54-2.09-2-.18-2.46-.8.23-1.84 0-2.59-1.54-1.3-1.54-2.09 1.28-1.38 1.52-2.09-.44-2 0-2.59 1.85-.35 2.48-.8.78-1.84 1.53-2.12 1.67.83 2.47.83 1.75-1 2.47-.8.91 1.64 1.53 2.09 2 .18 2.46.8-.23 1.84 0 2.59 1.54 1.3 1.54 2.09z\" })));\n}\n\nconst PartnerBadgeOverlay = () => (h(\"svg\", { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\" },\n  h(\"path\", { d: \"M10.5906 6.39993L9.19223 7.29993C8.99246 7.39993 8.89258 7.39993 8.69281 7.29993C8.59293 7.19993 8.39317 7.09993 8.29328 6.99993C7.89375 6.89993 7.5941 6.99993 7.29445 7.19993L6.79504 7.49993L4.29797 9.19993C3.69867 9.49993 2.99949 9.39993 2.69984 8.79993C2.30031 8.29993 2.50008 7.59993 2.99949 7.19993L5.99598 5.19993C6.79504 4.69993 7.79387 4.49993 8.69281 4.69993C9.49188 4.89993 10.0912 5.29993 10.5906 5.89993C10.7904 6.09993 10.6905 6.29993 10.5906 6.39993Z\", fill: \"currentColor\" }),\n  h(\"path\", { d: \"M13.4871 7.79985C13.4871 8.19985 13.2874 8.59985 12.9877 8.79985L9.89135 10.7999C9.29206 11.1999 8.69276 11.3999 7.99358 11.3999C7.69393 11.3999 7.49417 11.3999 7.19452 11.2999C6.39545 11.0999 5.79616 10.6999 5.29674 10.0999C5.19686 9.89985 5.29674 9.69985 5.39663 9.59985L6.79499 8.69985C6.89487 8.59985 7.09463 8.59985 7.19452 8.69985C7.39428 8.79985 7.59405 8.89985 7.69393 8.99985C8.09346 8.99985 8.39311 8.99985 8.69276 8.79985L9.39194 8.39985L11.3896 6.99985L11.6892 6.79985C12.1887 6.49985 12.9877 6.59985 13.2874 7.09985C13.4871 7.39985 13.4871 7.59985 13.4871 7.79985Z\", fill: \"currentColor\" })));\n\nconst VerifiedBadgeOverlay = () => (h(\"svg\", { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" },\n  h(\"path\", { d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\", fill: \"currentColor\" })));\n\nconst discordInviteCss = \".discord-invite{background-color:#2f3136;border-radius:4px;padding:16px;width:432px}.discord-light-theme .discord-invite{background-color:#f2f3f5}.discord-invite .discord-invite-header{font-weight:700;font-size:12px;line-height:16px;margin-bottom:12px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-transform:uppercase;color:#b9bbbe}.discord-light-theme .discord-invite .discord-invite-header{color:#4f5660}.discord-invite .discord-invite-root{display:flex;flex-flow:row nowrap}.discord-invite .discord-invite-icon{background-color:#36393f;border-radius:15px;margin-right:16px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50px;height:50px}.discord-light-theme .discord-invite .discord-invite-icon{background-color:#fff}.discord-invite .discord-invite-info{font-family:WhitneyMedium, Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;display:flex;flex:1 1 auto;flex-direction:column;flex-wrap:nowrap;align-items:stretch;justify-content:center}.discord-invite .discord-invite-title{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin-bottom:2px;color:white;font-size:16px;line-height:20px;font-weight:700;display:flex;flex-direction:row}.discord-light-theme .discord-invite .discord-invite-title{color:#060607}.discord-invite .discord-invite-name{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-invite .discord-invite-counts{display:flex;align-items:center;font-size:14px;font-weight:600;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;color:#b9bbbe;line-height:16px}.discord-invite .discord-invite-status{display:block;margin-right:4px;width:8px;height:8px;border-radius:50%;background-color:#747f8d}.discord-invite .discord-invite-status-online{background-color:#3ba55d}.discord-invite .discord-invite-count{-webkit-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto;margin-right:8px;color:#b9bbbe;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.discord-invite .discord-invite-join{display:flex;justify-content:center;align-items:center;height:40px;padding:0 20px;align-self:center;margin-left:10px;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;line-height:20px;border-radius:3px;font-size:14px;font-weight:600;color:white !important;background-color:#3ba55d;-webkit-transition:background-color 0.17s ease;transition:background-color 0.17s ease}.discord-invite .discord-invite-join:hover{background-color:#2d7d46;text-decoration:none}.discord-invite .discord-invite-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;margin-right:8px;width:16px;height:16px;align-self:center;position:relative}.discord-invite .discord-invite-badge-verified{color:#3ba55d}.discord-invite .discord-invite-badge-partnered{color:#5865f2}.discord-invite .discord-invite-badge-container{position:absolute;top:-0.05px;left:0.05px;right:0;bottom:0;display:flex;align-items:center;justify-content:center;pointer-events:none;color:white}.discord-light-theme .discord-invite .discord-invite-counts,.discord-light-theme .discord-invite .discord-invite-count{color:#4f5660}\";\n\nconst DiscordInvite = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The server icon to display for the invite.\n     */\n    this.icon = defaultDiscordAvatars.blue;\n    /**\n     * The server's name.\n     * @default 'Discord Server'\n     */\n    this.name = 'Discord Server';\n    /**\n     * The number of members online on the server.\n     * @default 0\n     */\n    this.online = 0;\n    /**\n     * The number of members on the server.\n     * @default 0\n     */\n    this.members = 0;\n    /**\n     * Whether the server is verified.\n     * Only works if `partnered` is `false` or `undefined`.\n     */\n    this.verified = false;\n    /**\n     * Whether the server is partnered.\n     * Only works if `verified` is `false` or `undefined`.\n     */\n    this.partnered = false;\n    /**\n     * Invitation embed title.\n     * @default \"You've been invited to join a server\"\n     */\n    this.inviteTitle = \"You've been invited to join a server\";\n    /**\n     * The join button.\n     * @default 'Join'\n     */\n    this.joinBtn = 'Join';\n  }\n  render() {\n    return (h(\"div\", { class: \"discord-invite\" }, h(\"div\", { class: \"discord-invite-header\" }, this.inviteTitle), h(\"div\", { class: \"discord-invite-root\" }, h(\"img\", { class: \"discord-invite-icon\", src: this.icon, alt: this.name }), h(\"div\", { class: \"discord-invite-info\" }, h(\"div\", { class: \"discord-invite-title\" }, ((this.verified && !this.partnered) || (!this.verified && this.partnered)) && (h(\"div\", { class: \"discord-invite-badge\" }, h(GuildBadge, { \"aria-label\": this.partnered ? 'Discord Partner' : 'Verified', class: `discord-invite-badge-${this.partnered ? 'partnered' : 'verified'}` }), h(\"div\", { class: \"discord-invite-badge-container\" }, this.partnered ? h(PartnerBadgeOverlay, null) : h(VerifiedBadgeOverlay, null)))), h(\"span\", { class: \"discord-invite-name\" }, this.name)), h(\"div\", { class: \"discord-invite-counts\" }, h(\"i\", { class: \"discord-invite-status discord-invite-status-online\" }), h(\"span\", { class: \"discord-invite-count\" }, this.online.toLocaleString(), \" Online\"), h(\"i\", { class: \"discord-invite-status\" }), h(\"span\", { class: \"discord-invite-count\" }, this.members.toLocaleString(), \" Members\"))), h(\"a\", { class: \"discord-invite-join\", href: this.url, target: \"_blank\", rel: \"noopener noreferrer\" }, this.joinBtn))));\n  }\n  get el() { return getElement(this); }\n};\nDiscordInvite.style = discordInviteCss;\n\nconst DiscordItalic = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(\"em\", null, h(\"slot\", null)));\n  }\n};\n\nvar removeHash = function removeHash(hex) {\n  return hex.charAt(0) === '#' ? hex.slice(1) : hex;\n};\n\nvar parseHex = function parseHex(nakedHex) {\n  var isShort = nakedHex.length === 3 || nakedHex.length === 4;\n  var twoDigitHexR = isShort ? \"\".concat(nakedHex.slice(0, 1)).concat(nakedHex.slice(0, 1)) : nakedHex.slice(0, 2);\n  var twoDigitHexG = isShort ? \"\".concat(nakedHex.slice(1, 2)).concat(nakedHex.slice(1, 2)) : nakedHex.slice(2, 4);\n  var twoDigitHexB = isShort ? \"\".concat(nakedHex.slice(2, 3)).concat(nakedHex.slice(2, 3)) : nakedHex.slice(4, 6);\n  var twoDigitHexA = (isShort ? \"\".concat(nakedHex.slice(3, 4)).concat(nakedHex.slice(3, 4)) : nakedHex.slice(6, 8)) || 'ff'; // const numericA = +((parseInt(a, 16) / 255).toFixed(2));\n\n  return {\n    r: twoDigitHexR,\n    g: twoDigitHexG,\n    b: twoDigitHexB,\n    a: twoDigitHexA\n  };\n};\n\nvar hexToDecimal = function hexToDecimal(hex) {\n  return parseInt(hex, 16);\n};\n\nvar hexesToDecimals = function hexesToDecimals(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  return {\n    r: hexToDecimal(r),\n    g: hexToDecimal(g),\n    b: hexToDecimal(b),\n    a: +(hexToDecimal(a) / 255).toFixed(2)\n  };\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}; // eslint-disable-line no-restricted-globals, max-len\n\n\nvar formatRgb = function formatRgb(decimalObject, parameterA) {\n  var r = decimalObject.r,\n      g = decimalObject.g,\n      b = decimalObject.b,\n      parsedA = decimalObject.a;\n  var a = isNumeric(parameterA) ? parameterA : parsedA;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n};\n/**\n * Turns an old-fashioned css hex color value into a rgb color value.\n *\n * If you specify an alpha value, you'll get a rgba() value instead.\n *\n * @param The hex value to convert. ('123456'. '#123456', ''123', '#123')\n * @param An alpha value to apply. (optional) ('0.5', '0.25')\n * @return An rgb or rgba value. ('rgb(11, 22, 33)'. 'rgba(11, 22, 33, 0.5)')\n */\n\n\nvar hexToRgba = function hexToRgba(hex, a) {\n  var hashlessHex = removeHash(hex);\n  var hexObject = parseHex(hashlessHex);\n  var decimalObject = hexesToDecimals(hexObject);\n  return formatRgb(decimalObject, a);\n};\n\nvar build = hexToRgba;\n\nfunction ChannelThread(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\" })));\n}\n\nfunction LockedVoiceChannel(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z\", \"aria-hidden\": \"true\" })));\n}\n\nfunction VoiceChannel(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M11.383 3.07904C11.009 2.92504 10.579 3.01004 10.293 3.29604L6 8.00204H3C2.45 8.00204 2 8.45304 2 9.00204V15.002C2 15.552 2.45 16.002 3 16.002H6L10.293 20.71C10.579 20.996 11.009 21.082 11.383 20.927C11.757 20.772 12 20.407 12 20.002V4.00204C12 3.59904 11.757 3.23204 11.383 3.07904ZM14 5.00195V7.00195C16.757 7.00195 19 9.24595 19 12.002C19 14.759 16.757 17.002 14 17.002V19.002C17.86 19.002 21 15.863 21 12.002C21 8.14295 17.86 5.00195 14 5.00195ZM14 9.00195C15.654 9.00195 17 10.349 17 12.002C17 13.657 15.654 15.002 14 15.002V13.002C14.551 13.002 15 12.553 15 12.002C15 11.451 14.551 11.002 14 11.002V9.00195Z\", \"aria-hidden\": \"true\" })));\n}\n\nfunction ChannelIcon(props) {\n  return (h(\"svg\", Object.assign({}, props, { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", xmlns: \"http://www.w3.org/2000/svg\" }),\n    h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M5.88657 21C5.57547 21 5.3399 20.7189 5.39427 20.4126L6.00001 17H2.59511C2.28449 17 2.04905 16.7198 2.10259 16.4138L2.27759 15.4138C2.31946 15.1746 2.52722 15 2.77011 15H6.35001L7.41001 9H4.00511C3.69449 9 3.45905 8.71977 3.51259 8.41381L3.68759 7.41381C3.72946 7.17456 3.93722 7 4.18011 7H7.76001L8.39677 3.41262C8.43914 3.17391 8.64664 3 8.88907 3H9.87344C10.1845 3 10.4201 3.28107 10.3657 3.58738L9.76001 7H15.76L16.3968 3.41262C16.4391 3.17391 16.6466 3 16.8891 3H17.8734C18.1845 3 18.4201 3.28107 18.3657 3.58738L17.76 7H21.1649C21.4755 7 21.711 7.28023 21.6574 7.58619L21.4824 8.58619C21.4406 8.82544 21.2328 9 20.9899 9H17.41L16.35 15H19.7549C20.0655 15 20.301 15.2802 20.2474 15.5862L20.0724 16.5862C20.0306 16.8254 19.8228 17 19.5799 17H16L15.3632 20.5874C15.3209 20.8261 15.1134 21 14.8709 21H13.8866C13.5755 21 13.3399 20.7189 13.3943 20.4126L14 17H8.00001L7.36325 20.5874C7.32088 20.8261 7.11337 21 6.87094 21H5.88657ZM9.41045 9L8.35045 15H14.3504L15.4104 9H9.41045Z\" })));\n}\n\nfunction ChannnelForum(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 20 20\", fill: \"none\" }),\n    h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M6.56929 14.6869H2.34375C1.97079 14.6869 1.61311 14.5387 1.34938 14.275C1.08566 14.0113 0.9375 13.6536 0.9375 13.2806V8.12437C0.9375 6.38389 1.6289 4.7147 2.85961 3.484C4.09032 2.25329 5.75951 1.56189 7.49999 1.56189C9.24047 1.56189 10.9097 2.25329 12.1404 3.484C12.6953 4.03895 13.1406 4.68307 13.4623 5.38267C14.9101 5.5973 16.2513 6.29124 17.2655 7.36251C18.4194 8.58133 19.0625 10.1959 19.0625 11.8744V17.0306C19.0625 17.4036 18.9144 17.7613 18.6506 18.025C18.3869 18.2887 18.0292 18.4369 17.6563 18.4369H12.5C11.1428 18.4369 9.81899 18.0162 8.71072 17.2328C7.7871 16.58 7.05103 15.7019 6.56929 14.6869ZM4.18544 4.80982C5.06451 3.93075 6.25679 3.43689 7.49999 3.43689C8.74319 3.43689 9.93549 3.93075 10.8146 4.80983C11.6936 5.6889 12.1875 6.88119 12.1875 8.12439C12.1875 9.36759 11.6936 10.5599 10.8146 11.439C9.93549 12.318 8.74321 12.8119 7.50001 12.8119H7.20268C7.19767 12.8118 7.19266 12.8118 7.18764 12.8119H2.8125V8.12438C2.8125 6.88118 3.30636 5.6889 4.18544 4.80982ZM8.672 14.5814C8.97763 15.0132 9.35591 15.3928 9.79299 15.7017C10.5847 16.2614 11.5305 16.5619 12.5 16.5619H17.1875V11.8744C17.1875 10.6755 16.7281 9.52219 15.9039 8.65159C15.3804 8.09865 14.735 7.68644 14.027 7.44246C14.0506 7.66798 14.0625 7.89557 14.0625 8.12439C14.0625 9.86487 13.3711 11.5341 12.1404 12.7648C11.1896 13.7156 9.97697 14.3445 8.672 14.5814Z\" })));\n}\n\nconst discordMentionCss = \".discord-message .discord-mention{color:#e3e7f8;background-color:hsla(235, 85.6%, 64.7%, 0.3);font-weight:500;padding:0 2px;border-radius:3px;unicode-bidi:-moz-plaintext;unicode-bidi:plaintext;-webkit-transition:background-color 50ms ease-out, color 50ms ease-out;transition:background-color 50ms ease-out, color 50ms ease-out;cursor:pointer}.discord-message .discord-mention:hover{color:#fff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention.discord-channel-mention{padding-left:1.2rem !important;position:relative}.discord-message .discord-mention.discord-voice-mention,.discord-message .discord-mention.discord-locked-mention,.discord-message .discord-mention.discord-thread-mention,.discord-message .discord-mention.discord-forum-mention{padding-left:1.25rem !important;position:relative}.discord-light-theme .discord-message .discord-mention{color:#687dc6;background-color:hsla(235, 85.6%, 64.7%, 0.15)}.discord-light-theme .discord-message .discord-mention:hover{color:#ffffff;background-color:hsl(235, 85.6%, 64.7%)}.discord-message .discord-mention .discord-mention-icon{width:1rem;height:1rem;object-fit:contain;position:absolute;left:0.125rem;top:0.125rem}\";\n\nconst DiscordMention = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Whether this entire message block should be highlighted (to emulate the \"logged in user\" being pinged).\n     */\n    this.highlight = false;\n    /**\n     * The type of mention this should be. This will prepend the proper prefix character.\n     * Valid values: `user`, `channel`, `role`, `voice`, `locked`, `thread`, and `forum`.\n     */\n    this.type = 'user';\n  }\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordMention `type` prop must be a string.');\n    }\n    else if (!['user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum'].includes(value)) {\n      throw new RangeError(\"DiscordMention `type` prop must be one of: 'user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum'\");\n    }\n  }\n  componentWillRender() {\n    this.handleType(this.type);\n  }\n  componentDidLoad() {\n    if (this.color && this.type === 'role') {\n      this.el.addEventListener('mouseover', this.setHoverColor.bind(this));\n      this.el.addEventListener('mouseout', this.resetHoverColor.bind(this));\n    }\n  }\n  disconnectedCallback() {\n    if (this.color && this.type === 'role') {\n      this.el.removeEventListener('mouseover', this.setHoverColor.bind(this));\n      this.el.removeEventListener('mouseout', this.resetHoverColor.bind(this));\n    }\n  }\n  setHoverColor() {\n    this.el.style.backgroundColor = build(this.color, 0.3);\n  }\n  resetHoverColor() {\n    this.el.style.backgroundColor = build(this.color, 0.1);\n  }\n  render() {\n    const { color, type } = this;\n    const colorStyle = !color || type !== 'role' ? {} : { color, 'background-color': build(color, 0.1) };\n    let mentionPrepend = '';\n    switch (this.type) {\n      case 'channel':\n        mentionPrepend = h(ChannelIcon, { class: \"discord-mention-icon\" });\n        break;\n      case 'user':\n      case 'role':\n        mentionPrepend = '@';\n        break;\n      case 'voice':\n        mentionPrepend = h(VoiceChannel, { class: \"discord-mention-icon\" });\n        break;\n      case 'locked':\n        mentionPrepend = h(LockedVoiceChannel, { class: \"discord-mention-icon\" });\n        break;\n      case 'thread':\n        mentionPrepend = h(ChannelThread, { class: \"discord-mention-icon\" });\n        break;\n      case 'forum':\n        mentionPrepend = h(ChannnelForum, { class: \"discord-mention-icon\" });\n        break;\n    }\n    return (h(Host, { style: colorStyle, class: `discord-mention discord-${type}-mention` }, mentionPrepend, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"handleType\"]\n  }; }\n};\nDiscordMention.style = discordMentionCss;\n\nconst VerifiedTick = () => (h(\"svg\", { class: \"discord-application-tag-verified\", \"aria-label\": \"Verified Bot\", \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 16 15.2\" },\n  h(\"path\", { d: \"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\", fill: \"currentColor\" })));\n\nconst AuthorInfo = ({ author, bot, server, op, roleColor, roleIcon, roleName, verified, compact }) => (h(\"span\", { class: \"discord-author-info\" },\n  !compact && (h(Fragment, null,\n    h(\"span\", { class: \"discord-author-username\", style: { color: roleColor } }, author),\n    roleIcon && h(\"img\", { class: \"discord-author-role-icon\", src: roleIcon, height: \"20\", width: \"20\", alt: roleName, draggable: false }))),\n  h(Fragment, null,\n    bot && !server && (h(\"span\", { class: \"discord-application-tag\" },\n      verified && h(VerifiedTick, null),\n      \"Bot\")),\n    server && !bot && h(\"span\", { class: \"discord-application-tag\" }, \"Server\"),\n    op && h(\"span\", { class: \"discord-application-tag discord-application-tag-op\" }, \"OP\")),\n  compact && (h(\"span\", { class: \"discord-author-username\", style: { color: roleColor } }, author))));\n\nfunction Ephemeral(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"16\", height: \"16\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M12 5C5.648 5 1 12 1 12C1 12 5.648 19 12 19C18.352 19 23 12 23 12C23 12 18.352 5 12 5ZM12 16C9.791 16 8 14.21 8 12C8 9.79 9.791 8 12 8C14.209 8 16 9.79 16 12C16 14.21 14.209 16 12 16Z\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\" })));\n}\n\nconst discordMessageCss = \".discord-message{color:#dcddde;display:flex;flex-direction:column;font-size:0.9em;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-message .discord-message-inner{display:flex;position:relative;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.discord-message.discord-highlight-mention,.discord-message.discord-highlight-ephemeral{padding-right:5px;position:relative}.discord-message.discord-highlight-mention::before,.discord-message.discord-highlight-ephemeral::before{content:'';position:absolute;display:block;top:0;left:0;bottom:0;pointer-events:none;width:2px}.discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1)}.discord-light-theme .discord-message.discord-highlight-mention{background-color:rgba(250, 166, 26, 0.1)}.discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.08)}.discord-light-theme .discord-message.discord-highlight-mention:hover{background-color:rgba(250, 166, 26, 0.2)}.discord-message.discord-highlight-mention::before{background-color:#faa61a}.discord-message.discord-highlight-ephemeral{background-color:rgba(88, 101, 242, 0.05)}.discord-light-theme .discord-message.discord-highlight-ephemeral{background-color:rgba(250, 166, 26, 0.1)}.discord-message.discord-highlight-ephemeral:hover{background-color:rgba(88, 101, 242, 0.1)}.discord-message.discord-highlight-ephemeral::before{background-color:#5865f2}.discord-light-theme .discord-message{color:#2e3338;border-color:#eceeef}.discord-message a{color:#00aff4;font-weight:normal;text-decoration:none}.discord-message a:hover{text-decoration:underline}.discord-light-theme .discord-message a{color:#00b0f4}.discord-message a:hover{text-decoration:underline}.discord-message .discord-author-avatar{margin-right:16px;margin-top:5px;min-width:40px;z-index:1}.discord-message .discord-author-avatar img{width:40px;height:40px;border-radius:50%}.discord-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-message .discord-message-timestamp{color:#747f8d}.discord-message .discord-message-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-message .discord-message-edited{color:#99aab5}.discord-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px}.discord-message .discord-message-body{font-size:1rem;font-weight:400;word-break:break-word;position:relative}.discord-message .discord-message-body strong{font-weight:700}.discord-message .discord-message-body em{font-style:italic}.discord-message .discord-message-body u{text-decoration-color:rgb(220, 221, 222);text-decoration-line:underline;text-decoration-style:solid;text-decoration-thickness:auto}.discord-message .discord-message-body pre{border:1px solid #202225;border-radius:4px}.discord-message .discord-message-body code{background:#2f3136;white-space:break-spaces;font-family:Consolas, Andale Mono WT, Andale Mono, Lucida Console, Lucida Sans Typewriter, DejaVu Sans Mono, Bitstream Vera Sans Mono,\\n\\t\\tLiberation Mono, Nimbus Mono L, Monaco, Courier New, Courier, monospace}.discord-light-theme .discord-message .discord-message-timestamp,.discord-compact-mode .discord-message:hover .discord-message-timestamp,.discord-compact-mode.discord-light-theme .discord-message:hover .discord-message-timestamp{color:#99aab5}.discord-compact-mode.discord-light-theme .discord-message .discord-message-timestamp{color:#d1d9de}.discord-compact-mode .discord-message .discord-message-timestamp{display:inline-block;width:3.1rem;text-align:right;font-size:0.6875rem;line-height:1.375rem;margin-right:0.25rem;margin-left:0;text-indent:0}.discord-compact-mode .discord-message{margin-top:unset}.discord-compact-mode .discord-message .discord-message-body{line-height:1.375rem;padding-left:10px;text-indent:-6px}.discord-compact-mode .discord-message .discord-message-compact-indent{padding-left:10px}.discord-message:first-child{margin-top:0.5rem}.discord-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-message .discord-message-markup{font-size:1rem;line-height:1.375rem;word-wrap:break-word;user-select:text;font-weight:400}.discord-compact-mode .discord-author-avatar{display:none}.discord-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-message.discord-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-message.discord-message-has-thread:after{border-color:#747f8d}.discord-message-ephemeral{color:#72767d;margin-top:4px;font-size:12px;font-weight:400;color:#72767d}.discord-light-theme .discord-message-ephemeral{color:#747f8d}.discord-message-ephemeral .discord-message-ephemeral-link{color:#00aff4;font-weight:500;cursor:pointer}.discord-message-ephemeral .discord-message-ephemeral-link:hover{text-decoration:underline}.discord-message-ephemeral .discord-message-ephemeral-icon{margin-right:4px;vertical-align:text-bottom}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:16px;margin-right:0.25rem}.discord-compact-mode .discord-message .discord-author-info{margin-right:0}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1em;font-weight:500}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.625em;margin-left:4px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-message .discord-author-info .discord-author-role-icon{margin-left:0.25rem;vertical-align:top;height:calc(1rem + 4px);width:calc(1rem + 4px)}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:10px;padding-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag-verified{margin-right:0.7em;margin-left:-0.7em}\";\n\nconst DiscordMessage = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The message author's username.\n     * @default 'User'\n     */\n    this.author = 'User';\n    /**\n     * Whether the message author is a bot or not.\n     * Only works if `server` is `false` or `undefined`.\n     */\n    this.bot = false;\n    /**\n     * Whether the message author is a server crosspost webhook or not.\n     * Only works if `bot` is `false` or `undefined`.\n     */\n    this.server = false;\n    /**\n     * Whether the bot is verified or not.\n     * Only works if `bot` is `true`\n     */\n    this.verified = false;\n    /**\n     * Whether the author is the original poster.\n     */\n    this.op = false;\n    /**\n     * Whether the message has been edited or not.\n     */\n    this.edited = false;\n    /**\n     * Whether to highlight this message.\n     */\n    this.highlight = false;\n    /**\n     * Whether to make this message ephemeral.\n     */\n    this.ephemeral = false;\n    /**\n     * The timestamp to use for the message date.\n     */\n    this.timestamp = new Date();\n    /**\n     * Whether to use 24-hour format for the timestamp.\n     */\n    this.twentyFour = false;\n  }\n  updateTimestamp(value) {\n    const parent = this.el.parentElement;\n    return handleTimestamp(value, parent.compactMode, this.twentyFour);\n  }\n  componentWillRender() {\n    const parent = this.el.parentElement;\n    this.timestamp = handleTimestamp(this.timestamp, parent.compactMode, this.twentyFour);\n  }\n  render() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\n      throw new Error('All <discord-message> components must be direct children of <discord-messages>.');\n    }\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : avatars.default; };\n    const defaultData = {\n      author: this.author,\n      bot: this.bot,\n      verified: this.verified,\n      server: this.server,\n      op: this.op,\n      roleColor: this.roleColor,\n      roleIcon: this.roleIcon,\n      roleName: this.roleName\n    };\n    const profileData = (_a = Reflect.get(profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\n    const highlightMention = \n    // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some((child) => {\n      return child.tagName.toLowerCase() === 'discord-mention' && child.highlight && ['user', 'role'].includes(child.type);\n    }) || this.highlight;\n    const hasThread = \n    // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some((child) => {\n      return child.tagName.toLowerCase() === 'discord-thread';\n    });\n    return (h(Host, { class: clsx('discord-message', {\n        'discord-highlight-mention': highlightMention,\n        'discord-message-has-thread': hasThread,\n        'discord-highlight-ephemeral': this.ephemeral\n      }) }, h(\"slot\", { name: \"reply\" }), h(\"div\", { class: \"discord-message-inner\" }, parent.compactMode && h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp), h(\"div\", { class: \"discord-author-avatar\" }, h(\"img\", { src: profile.avatar, alt: profile.author })), h(\"div\", { class: \"discord-message-content\" }, !parent.compactMode && (h(Fragment, null, h(AuthorInfo, { author: (_c = profile.author) !== null && _c !== void 0 ? _c : '', bot: (_d = profile.bot) !== null && _d !== void 0 ? _d : false, server: (_e = profile.server) !== null && _e !== void 0 ? _e : false, verified: (_f = profile.verified) !== null && _f !== void 0 ? _f : false, op: (_g = profile.op) !== null && _g !== void 0 ? _g : false, roleColor: (_h = profile.roleColor) !== null && _h !== void 0 ? _h : '', roleIcon: (_j = profile.roleIcon) !== null && _j !== void 0 ? _j : '', roleName: (_k = profile.roleName) !== null && _k !== void 0 ? _k : '', compact: parent.compactMode }), h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp))), h(\"div\", { class: \"discord-message-body\" }, parent.compactMode && (h(AuthorInfo, { author: (_l = profile.author) !== null && _l !== void 0 ? _l : '', bot: (_m = profile.bot) !== null && _m !== void 0 ? _m : false, server: (_o = profile.server) !== null && _o !== void 0 ? _o : false, verified: (_p = profile.verified) !== null && _p !== void 0 ? _p : false, op: (_q = profile.op) !== null && _q !== void 0 ? _q : false, roleColor: (_r = profile.roleColor) !== null && _r !== void 0 ? _r : '', roleIcon: (_s = profile.roleIcon) !== null && _s !== void 0 ? _s : '', roleName: (_t = profile.roleName) !== null && _t !== void 0 ? _t : '', compact: parent.compactMode })), h(\"span\", { class: \"discord-message-markup\" }, h(\"slot\", null)), this.edited ? h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), h(\"div\", { class: \"discord-message-compact-indent\" }, h(\"slot\", { name: \"embeds\" }), h(\"slot\", { name: \"attachments\" }), h(\"slot\", { name: \"components\" }), h(\"slot\", { name: \"reactions\" }), h(\"slot\", { name: \"thread\" }), this.ephemeral && (h(\"div\", { class: \"discord-message-ephemeral\" }, h(Ephemeral, { class: \"discord-message-ephemeral-icon\" }), \"Only you can see this \\u2022 \", h(\"span\", { class: \"discord-message-ephemeral-link\" }, \"Dismiss message\"))))))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"timestamp\": [\"updateTimestamp\"]\n  }; }\n};\nDiscordMessage.style = discordMessageCss;\n\nconst discordMessagesCss = \"@import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700');@font-face{font-family:'Whitney';src:url('https://cdn.skyra.pw/whitney-font/v2/Book.woff') format('woff');font-weight:400}@font-face{font-family:'Whitney';src:url('https://cdn.skyra.pw/whitney-font/v2/Medium.woff') format('woff');font-weight:500}@font-face{font-family:'Whitney';src:url('https://cdn.skyra.pw/whitney-font/v2/Semibold.woff') format('woff');font-weight:600}@font-face{font-family:'Whitney';src:url('https://cdn.skyra.pw/whitney-font/v2/Bold.woff') format('woff');font-weight:700}.discord-messages{color:#fff;background-color:#36393e;display:block;font-size:16px;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;line-height:170%;border:1px solid rgba(255, 255, 255, 0.05)}.discord-messages.discord-light-theme{color:#747f8d;background-color:#fff;border-color:#dedede}.discord-messages.discord-no-background{background-color:unset}\";\n\nconst DiscordMessages = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillRender() {\n    if (this.lightTheme || (defaultTheme === 'light' && this.lightTheme)) {\n      this.lightTheme = true;\n    }\n    if (this.compactMode || (defaultMode === 'compact' && this.compactMode)) {\n      this.compactMode = true;\n    }\n    if (this.noBackground || (defaultBackground === 'none' && this.noBackground)) {\n      this.noBackground = true;\n    }\n  }\n  render() {\n    return (h(Host, { class: clsx({\n        'discord-light-theme': this.lightTheme,\n        'discord-compact-mode': this.compactMode,\n        'discord-no-background': this.noBackground\n      }, 'discord-messages') }, h(\"slot\", null)));\n  }\n};\nDiscordMessages.style = discordMessagesCss;\n\nconst discordQuoteCss = \".discord-message .discord-message-body .discord-quote-container{display:flex}.discord-message .discord-message-body .discord-quote-container>.discord-quote-divider{background-color:#4f545c;border-radius:4px;font-size:0.9em;font-style:normal;font-weight:400;margin:0;padding:0;width:4px}.discord-message .discord-message-body blockquote{margin-block-end:unset;margin-block-start:unset;margin-inline-end:unset;margin-inline-start:unset;padding:0 8px 0 12px}\";\n\nconst DiscordQuote = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-quote-container\" }, h(\"div\", { class: \"discord-quote-divider\" }), h(\"blockquote\", null, h(\"slot\", null))));\n  }\n};\nDiscordQuote.style = discordQuoteCss;\n\nconst discordReactionCss = \".discord-reaction{border-radius:0.5rem;cursor:pointer;flex-shrink:0;margin-right:0.25rem;margin-bottom:0.25rem;user-select:none;transition:none 0.1s ease;transition-property:background-color, border-color;background-color:#2f3136;border:1px solid transparent}.discord-light-theme .discord-reaction{background-color:#f2f3f5}.discord-reaction:hover{background-color:#36393f;border-color:#fff2}.discord-light-theme .discord-reaction:not(.discord-reaction-reacted):hover{background-color:white;border-color:#0003}.discord-reaction.discord-reaction-reacted{background-color:rgba(88, 101, 242, 0.15);border-color:#5865f2}.discord-light-theme .discord-reaction.discord-reaction-reacted{background-color:#e7e9fd}.discord-reaction .discord-reaction-inner{display:flex;align-items:center;padding:0.125rem 0.375rem}.discord-reaction img{width:1rem;height:1rem;margin:0.125rem 0;min-width:auto;min-height:auto;object-fit:contain;vertical-align:bottom}.discord-reaction .discord-reaction-count{font-size:0.875rem;font-weight:500;margin-left:0.375rem;text-align:center;color:#b9bbbe}.discord-light-theme .discord-reaction .discord-reaction-count{color:#4f5660}.discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#dee0fc}.discord-light-theme .discord-reaction.discord-reaction-reacted .discord-reaction-count{color:#5865f2}\";\n\nconst DiscordReaction = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The name of the emoji to use as alternative image text.\n     * @default ':emoji'\n     */\n    this.name = ':emoji:';\n    /**\n     * The number of people who reacted.\n     * @default 1\n     */\n    this.count = 1;\n    /**\n     * Whether the reaction should show as reacted by the user.\n     * @default false\n     */\n    this.reacted = false;\n    /**\n     * Whether the reaction should be reactive.\n     * @remark When the reaction is interactive left clicking it will add 1 to the counter.\n     * Whereas when holding the Shift key and left clicking it will decrease the counter.\n     * The counter cannot go below 1.\n     * @default false\n     */\n    this.interactive = false;\n  }\n  render() {\n    return (h(\"div\", { class: clsx('discord-reaction', { 'discord-reaction-reacted': this.reacted }), onClick: this.handleReactionClick.bind(this) }, h(\"div\", { class: \"discord-reaction-inner\" }, h(\"img\", { src: this.emoji, alt: this.name, draggable: false }), h(\"span\", { class: \"discord-reaction-count\" }, this.count))));\n  }\n  handleReactionClick(event) {\n    if (this.interactive) {\n      if (event.shiftKey) {\n        this.count--;\n      }\n      else {\n        this.count++;\n      }\n      if (this.count <= 0) {\n        this.count = 1;\n      }\n    }\n  }\n  get el() { return getElement(this); }\n};\nDiscordReaction.style = discordReactionCss;\n\nconst discordReactionsCss = \".discord-message .discord-reactions,.discord-system-message .discord-reactions{display:flex;-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;align-items:center;flex-wrap:wrap}\";\n\nconst DiscordReactions = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-reactions\" }, h(\"slot\", null)));\n  }\n};\nDiscordReactions.style = discordReactionsCss;\n\nfunction AttachmentReply(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"64\", height: \"64\", viewBox: \"0 0 64 64\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M56 50.6667V13.3333C56 10.4 53.6 8 50.6667 8H13.3333C10.4 8 8 10.4 8 13.3333V50.6667C8 53.6 10.4 56 13.3333 56H50.6667C53.6 56 56 53.6 56 50.6667ZM22.6667 36L29.3333 44.0267L38.6667 32L50.6667 48H13.3333L22.6667 36Z\" })));\n}\n\nfunction CommandReply(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M5 3C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3H5ZM16.8995 8.41419L15.4853 6.99998L7 15.4853L8.41421 16.8995L16.8995 8.41419Z\" })));\n}\n\nfunction ReplyIcon(props) {\n  return (h(\"svg\", Object.assign({}, props, { width: \"12\", height: \"8\", viewBox: \"0 0 12 8\" }),\n    h(\"path\", { d: \"M0.809739 3.59646L5.12565 0.468433C5.17446 0.431163 5.23323 0.408043 5.2951 0.401763C5.35698 0.395482 5.41943 0.406298 5.4752 0.432954C5.53096 0.45961 5.57776 0.50101 5.61013 0.552343C5.64251 0.603676 5.65914 0.662833 5.6581 0.722939V2.3707C10.3624 2.3707 11.2539 5.52482 11.3991 7.21174C11.4028 7.27916 11.3848 7.34603 11.3474 7.40312C11.3101 7.46021 11.2554 7.50471 11.1908 7.53049C11.1262 7.55626 11.0549 7.56204 10.9868 7.54703C10.9187 7.53201 10.857 7.49695 10.8104 7.44666C8.72224 5.08977 5.6581 5.63359 5.6581 5.63359V7.28135C5.65831 7.34051 5.64141 7.39856 5.60931 7.44894C5.5772 7.49932 5.53117 7.54004 5.4764 7.5665C5.42163 7.59296 5.3603 7.60411 5.29932 7.59869C5.23834 7.59328 5.18014 7.57151 5.13128 7.53585L0.809739 4.40892C0.744492 4.3616 0.691538 4.30026 0.655067 4.22975C0.618596 4.15925 0.599609 4.08151 0.599609 4.00269C0.599609 3.92386 0.618596 3.84612 0.655067 3.77562C0.691538 3.70511 0.744492 3.64377 0.809739 3.59646Z\", fill: \"currentColor\" })));\n}\n\nconst discordReplyCss = \".discord-replied-message{color:#b9bbbe;display:flex;font-size:0.875rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding-top:2px;margin-left:56px;margin-bottom:4px;align-items:center;line-height:1.125rem;position:relative;white-space:pre;user-select:none}.discord-light-theme .discord-replied-message{color:#4f5660}.discord-compact-mode .discord-replied-message{margin-left:62px;margin-bottom:0}.discord-replied-message:before{content:'';display:block;position:absolute;top:50%;right:100%;bottom:0;left:-36px;margin-right:4px;margin-top:-1px;margin-left:-1px;margin-bottom:-2px;border-left:2px solid #4f545c;border-bottom:0 solid #4f545c;border-right:0 solid #4f545c;border-top:2px solid #4f545c;border-top-left-radius:6px}.discord-light-theme .discord-replied-message:before{border-color:#747f8d}.discord-replied-message .discord-replied-message-avatar,.discord-replied-message .discord-reply-badge{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none;margin-right:0.25rem}.discord-replied-message .discord-reply-badge{display:flex;align-items:center;justify-content:center;color:#b9bbbe;background:#202225}.discord-light-theme .discord-replied-message .discord-reply-badge{color:#4f5660;background:#e3e5e8}.discord-replied-message .discord-application-tag{background-color:hsl(235, 85.6%, 64.7%);color:#fff;font-size:0.625rem;margin-right:0.25rem;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-replied-message .discord-application-tag .discord-application-tag-verified{width:0.9375rem;height:0.9375rem;margin-left:-0.1rem}.discord-replied-message .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-replied-message .discord-replied-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64;font-weight:500;color:#fff}.discord-replied-message .discord-replied-message-content{color:inherit;font-size:inherit;line-height:inherit;white-space:pre;text-overflow:ellipsis;user-select:none;cursor:pointer}.discord-replied-message .discord-replied-message-content:hover{color:#fff}.discord-light-theme .discord-replied-message .discord-replied-message-content:hover{color:#000}.discord-replied-message .discord-replied-message-content .discord-message-edited{margin-left:0.25rem}.discord-replied-message .discord-replied-message-content-icon{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:20px;height:20px;margin-left:4px}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:16px;margin-right:0.25rem}.discord-compact-mode .discord-message .discord-author-info{margin-right:0}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1em;font-weight:500}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.625em;margin-left:4px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-message .discord-author-info .discord-author-role-icon{margin-left:0.25rem;vertical-align:top;height:calc(1rem + 4px);width:calc(1rem + 4px)}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:10px;padding-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag-verified{margin-right:0.7em;margin-left:-0.7em}\";\n\nconst DiscordReply = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The message author's username.\n     * @default 'User'\n     */\n    this.author = 'User';\n    /**\n     * Whether the message author is a bot or not.\n     * Only works if `server` is `false` or `undefined`.\n     */\n    this.bot = false;\n    /**\n     * Whether the message author is a server crosspost webhook or not.\n     * Only works if `bot` is `false` or `undefined`.\n     */\n    this.server = false;\n    /**\n     * Whether the author is the original poster.\n     */\n    this.op = false;\n    /**\n     * Whether the bot is verified or not.\n     * Only works if `bot` is `true`\n     */\n    this.verified = false;\n    /**\n     * Whether the message has been edited or not.\n     */\n    this.edited = false;\n    /**\n     * Whether the referenced message is from a response of a slash command.\n     */\n    this.command = false;\n    /**\n     * Whether the referenced message contains attachments.\n     */\n    this.attachment = false;\n    /**\n     * Whether this reply pings the original message sender, prepending an \"@\" on the author's username.\n     */\n    this.mentions = false;\n  }\n  render() {\n    var _a, _b, _c;\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-message') {\n      throw new Error('All <discord-reply> components must be direct children of <discord-message>.');\n    }\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : avatars.default; };\n    const defaultData = {\n      author: this.author,\n      bot: this.bot,\n      verified: this.verified,\n      op: this.op,\n      server: this.server,\n      roleColor: this.roleColor\n    };\n    const profileData = (_a = Reflect.get(profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\n    const messageParent = parent.parentElement;\n    return (h(Host, { class: \"discord-replied-message\" }, messageParent.compactMode ? (h(\"div\", { class: \"discord-reply-badge\" }, h(ReplyIcon, null))) : (h(\"img\", { class: \"discord-replied-message-avatar\", src: profile.avatar, alt: profile.author })), h(Fragment, null, profile.bot && !profile.server && (h(\"span\", { class: \"discord-application-tag\" }, profile.verified && h(VerifiedTick, null), \"Bot\")), profile.server && !profile.bot && h(\"span\", { class: \"discord-application-tag\" }, \"Server\"), profile.op && h(\"span\", { class: \"discord-application-tag discord-application-tag-op\" }, \"OP\")), h(\"span\", { class: \"discord-replied-message-username\", style: { color: (_c = profile.roleColor) !== null && _c !== void 0 ? _c : '' } }, this.mentions && '@', profile.author), h(\"div\", { class: \"discord-replied-message-content\" }, h(\"slot\", null), this.edited ? h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), this.command ? (h(CommandReply, { class: \"discord-replied-message-content-icon\" })) : (this.attachment && h(AttachmentReply, { class: \"discord-replied-message-content-icon\" }))));\n  }\n  get el() { return getElement(this); }\n};\nDiscordReply.style = discordReplyCss;\n\nconst discordSpoilerCss = \".discord-message .discord-message-body .discord-spoiler{background-color:#202225;color:transparent;cursor:pointer}.discord-light-theme .discord-message .discord-message-body .discord-spoiler{background-color:#b9bbbe}.discord-message .discord-message-body .discord-spoiler:hover{background-color:rgba(32, 34, 37, 0.8)}.discord-light-theme .discord-message .discord-message-body .discord-spoiler:hover{background-color:rgba(185, 187, 190, 0.8)}.discord-message .discord-message-body .discord-spoiler:active{color:inherit;background-color:hsla(0, 0%, 100%, 0.1)}.discord-light-theme .discord-message .discord-message-body .discord-spoiler:active{background-color:rgba(0, 0, 0, 0.1)}\";\n\nconst DiscordSpoiler = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-spoiler\" }, h(\"slot\", null)));\n  }\n};\nDiscordSpoiler.style = discordSpoilerCss;\n\nfunction Boost(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 8 12\" }),\n    h(\"path\", { d: \"M4 0L0 4V8L4 12L8 8V4L4 0ZM7 7.59L4 10.59L1 7.59V4.41L4 1.41L7 4.41V7.59Z\", fill: \"currentColor\" }),\n    h(\"path\", { d: \"M2 4.83V7.17L4 9.17L6 7.17V4.83L4 2.83L2 4.83Z\", fill: \"currentColor\" })));\n}\n\nfunction DMCall(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    h(\"path\", { fill: \"#3ba55c\", \"fill-rule\": \"evenodd\", d: \"M17.7163041 15.36645368c-.0190957.02699568-1.9039523 2.6680735-2.9957762 2.63320406-3.0676659-.09785935-6.6733809-3.07188394-9.15694343-5.548738C3.08002193 9.9740657.09772497 6.3791404 0 3.3061316v-.024746C0 2.2060575 2.61386252.3152347 2.64082114.2972376c.7110335-.4971705 1.4917101-.3149497 1.80959713.1372281.19320342.2744561 2.19712724 3.2811005 2.42290565 3.6489167.09884826.1608492.14714912.3554431.14714912.5702838 0 .2744561-.07975258.5770327-.23701117.8751101-.1527655.2902036-.65262318 1.1664385-.89862055 1.594995.2673396.3768148.94804468 1.26429792 2.351016 2.66357424 1.39173858 1.39027775 2.28923588 2.07641807 2.67002628 2.34187563.4302146-.2452108 1.3086162-.74238132 1.5972981-.89423205.5447887-.28682915 1.0907006-.31944893 1.4568885-.08661115.3459689.2182151 3.3383754 2.21027167 3.6225641 2.41611376.2695862.19234426.4144887.5399137.4144887.91672846 0 .2969525-.089862.61190215-.2808189.88523346\" })));\n}\n\nfunction DMEdit(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      h(\"path\", { fill: \"#99AAB5\", d: \"M0 14.25V18h3.75L14.81 6.94l-3.75-3.75L0 14.25zM17.71 4.04c.39-.39.39-1.02 0-1.41L15.37.29c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" }),\n      h(\"path\", { d: \"M0 0h18v18H0\" }))));\n}\n\nfunction DMMissedCall(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      h(\"path\", { d: \"M0 0h18v18H0z\" }),\n      h(\"path\", { fill: \"#99AAB5\", d: \"M3.2765961.00034226C6.344262.0982016 9.949977 3.0722262 12.43353953 5.54908026c2.48356254 2.47685405 5.4658595 6.07177934 5.56358447 9.14478814 0 1.1000741-2.61386252 2.9908969-2.64082114 3.008894-.7110335.4971705-1.4917101.3149497-1.80959713-.1372281-.19320342-.2744561-2.19712724-3.2811005-2.42290565-3.6489167-.09884826-.1608492-.14714912-.3554431-.14714912-.5702838 0-.2744561.07975258-.5770327.23701117-.8751101.1527655-.2902036.65262318-1.1664385.89862055-1.594995-.2673396-.3768148-.94804468-1.26429792-2.351016-2.66357424C8.3695281 6.8223767 7.4720308 6.1362364 7.0912404 5.87077883c-.4302146.2452108-1.3086162.74238132-1.5972981.89423205-.5447887.28682915-1.0907006.31944893-1.4568885.08661115C3.6910849 6.63340693.6986784 4.64135036.4144897 4.43550827.1449035 4.243164.000001 3.89559457.000001 3.5187798c0-.29695252.089862-.61190217.2808189-.88523348.0190957-.02699568 1.9039523-2.6680735 2.9957762-2.63320406z\" }))));\n}\n\nfunction SystemAlert(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"20\", height: \"20\", viewBox: \"0 0 20 20\" }),\n    h(\"path\", { d: \"M10 0C4.486 0 0 4.486 0 10C0 15.515 4.486 20 10 20C15.514 20 20 15.515 20 10C20 4.486 15.514 0 10 0ZM9 4H11V11H9V4ZM10 15.25C9.31 15.25 8.75 14.691 8.75 14C8.75 13.31 9.31 12.75 10 12.75C10.69 12.75 11.25 13.31 11.25 14C11.25 14.691 10.69 15.25 10 15.25Z\", \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", fill: \"currentColor\" })));\n}\n\nfunction SystemError(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { xmlns: \"http://www.w3.org/2000/svg\", d: \"M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z\", fill: \"#ed4245\" })));\n}\n\nfunction Thread(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\" }),\n    h(\"path\", { fill: \"currentColor\", d: \"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\" })));\n}\n\nfunction UserJoin(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\" },\n      h(\"path\", { d: \"M18 0H0v18h18z\" }),\n      h(\"path\", { fill: \"#3ba55c\", d: \"M0 8h14.2l-3.6-3.6L12 3l6 6-6 6-1.4-1.4 3.6-3.6H0\" }))));\n}\n\nfunction UserLeave(props) {\n  return (h(\"svg\", Object.assign({}, props, { \"aria-hidden\": \"false\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\" }),\n    h(\"g\", { fill: \"none\", \"fill-rule\": \"evenodd\", stroke: \"none\", \"stroke-width\": \"1\" },\n      h(\"path\", { d: \"M18 0H0v18h18z\" }),\n      h(\"path\", { fill: \"#ed4245\", d: \"M3.8 8l3.6-3.6L6 3 0 9l6 6 1.4-1.4L3.8 10H18V8\" }))));\n}\n\nconst discordSystemMessageCss = \".discord-system-message{color:#8e9297;display:flex;font-weight:400;font-size:1rem;font-family:Whitney, Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;padding:0px 1em;position:relative;word-wrap:break-word;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;padding-right:0;min-height:1.375rem;padding-right:48px !important;margin-top:1.0625rem}.discord-light-theme .discord-system-message{color:#2e3338;border-color:#eceeef}.discord-system-message.discord-channel-name-change{color:#fff}.discord-light-theme .discord-system-message.discord-channel-name-change{color:#060607}.discord-system-message.discord-boost-system-message svg{color:#ff73fa}.discord-system-message.discord-alert-system-message svg{color:#faa81a}.discord-system-message.discord-error-system-message svg{color:#faa81a}.discord-system-message:first-child{margin-top:0.5rem}.discord-system-message:last-child{margin-bottom:0.5rem;border-bottom-width:0}.discord-system-message .discord-message-icon{margin-right:16px;margin-top:5px;min-width:40px;display:flex;align-items:flex-start;justify-content:center}.discord-system-message .discord-message-icon svg{width:16px;height:16px}.discord-system-message .discord-message-timestamp{color:#72767d;font-size:12px;margin-left:3px}.discord-light-theme .discord-system-message .discord-message-timestamp{color:#747f8d}.discord-system-message .discord-message-system-edited{color:#72767d;font-size:10px}.discord-light-theme .discord-system-message .discord-message-edited{color:#99aab5}.discord-system-message .discord-message-content{width:100%;line-height:160%;font-weight:normal;padding-top:2px;display:flex;flex-direction:column}.discord-system-message .discord-message-content i{font-style:normal;cursor:pointer;color:white;font-weight:500}.discord-light-theme .discord-system-message .discord-message-content i{color:#060607}.discord-system-message .discord-message-content i:hover{text-decoration:underline}.discord-system-message:hover{background-color:rgba(4, 4, 5, 0.07)}.discord-light-theme .discord-system-message:hover{background-color:rgba(6, 6, 7, 0.02)}.discord-system-message.discord-system-message-has-thread:after{width:2rem;left:2.2rem;top:1.75rem;border-left:2px solid #4f545c;border-bottom:2px solid #4f545c;border-bottom-left-radius:8px;bottom:29px;content:'';position:absolute}.discord-light-theme .discord-system-message.discord-system-message-has-thread:after{border-color:#747f8d}.discord-message .discord-author-info{display:inline-flex;align-items:center;font-size:16px;margin-right:0.25rem}.discord-compact-mode .discord-message .discord-author-info{margin-right:0}.discord-message .discord-author-info .discord-author-username{color:#fff;font-size:1em;font-weight:500}.discord-light-theme .discord-message .discord-author-info .discord-author-username{color:#23262a}.discord-message .discord-author-info .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.625em;margin-left:4px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-message .discord-author-info .discord-application-tag.discord-application-tag-op{background-color:#c9cdfb;color:#4752c4;border-radius:0.4rem}.discord-message .discord-author-info .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-message .discord-author-info .discord-author-role-icon{margin-left:0.25rem;vertical-align:top;height:calc(1rem + 4px);width:calc(1rem + 4px)}.discord-compact-mode .discord-message .discord-author-info .discord-author-username{margin-left:8px;margin-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag{margin-left:0;margin-left:5px;margin-right:5px;padding-left:10px;padding-right:4px}.discord-compact-mode .discord-message .discord-author-info .discord-application-tag-verified{margin-right:0.7em;margin-left:-0.7em}\";\n\nconst DiscordSystemMessage = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The timestamp to use for the message date.\n     */\n    this.timestamp = new Date();\n    /**\n     * The type of system message this is, this will change the icon shown.\n     * Valid values: `join`, `leave`, `call`, `missed-call`, `boost`, `edit`, `thread`, `alert`, and `error`.\n     */\n    this.type = 'join';\n    /**\n     * Whether this message is to show channel name changes, used to match Discord's style.\n     */\n    this.channelName = false;\n  }\n  handleType(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('DiscordSystemMessage `type` prop must be a string.');\n    }\n    else if (!['join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread', 'alert', 'error'].includes(value)) {\n      throw new RangeError(\"DiscordSystemMessage `type` prop must be one of: 'join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread' 'alert', 'error'\");\n    }\n  }\n  updateTimestamp(value) {\n    return handleTimestamp(value);\n  }\n  componentWillRender() {\n    this.timestamp = handleTimestamp(this.timestamp);\n  }\n  render() {\n    const parent = this.el.parentElement;\n    if (parent.tagName.toLowerCase() !== 'discord-messages') {\n      throw new Error('All <discord-system-message> components must be direct children of <discord-messages>.');\n    }\n    let icon = '';\n    switch (this.type) {\n      case 'join':\n        icon = h(UserJoin, null);\n        break;\n      case 'leave':\n        icon = h(UserLeave, null);\n        break;\n      case 'call':\n        icon = h(DMCall, null);\n        break;\n      case 'missed-call':\n        icon = h(DMMissedCall, null);\n        break;\n      case 'edit':\n        icon = h(DMEdit, null);\n        break;\n      case 'boost':\n        icon = h(Boost, null);\n        break;\n      case 'thread':\n        icon = h(Thread, null);\n        break;\n      case 'alert':\n        icon = h(SystemAlert, null);\n        break;\n      case 'error':\n        icon = h(SystemError, null);\n        break;\n    }\n    const hasThread = \n    // @ts-expect-error ts doesn't understand this\n    Array.from(this.el.children).some((child) => {\n      return child.tagName.toLowerCase() === 'discord-thread';\n    });\n    return (h(Host, { class: clsx('discord-system-message', `discord-${this.type}-system-message`, {\n        'discord-system-message-has-thread': hasThread,\n        'discord-channel-name-change': this.channelName\n      }) }, h(\"div\", { class: \"discord-message-icon\" }, icon), h(\"div\", { class: \"discord-message-content\" }, h(\"span\", null, h(\"slot\", null), h(\"span\", { class: \"discord-message-timestamp\" }, this.timestamp)), h(\"slot\", { name: \"reactions\" }), h(\"slot\", { name: \"thread\" }))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"type\": [\"handleType\"],\n    \"timestamp\": [\"updateTimestamp\"]\n  }; }\n};\nDiscordSystemMessage.style = discordSystemMessageCss;\n\nconst discordTenorVideoCss = \".discord-tenor-video{color:#dcddde;display:flex;font-size:13px;line-height:150%;margin-bottom:8px;margin-top:8px}.discord-tenor-video .discord-tenor-video-wrapper{display:block;position:relative;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;overflow:hidden;border-radius:4px}.discord-tenor-video .discord-tenor-video-wrapper video{-webkit-box-align:center;-webkit-box-pack:center;align-items:center;border-radius:0;cursor:pointer;display:flex;height:100%;justify-content:center;max-height:100%;width:100%;left:0px;top:0px}\";\n\nconst DiscordTenorVideo = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-tenor-video\" }, h(\"div\", { class: \"discord-tenor-video-wrapper\", style: { height: `${this.height}px`, width: `${this.width}px` } }, h(\"video\", { muted: true, preload: \"auto\", autoplay: true, loop: true, src: this.url, height: this.height, width: this.width }))));\n  }\n  get el() { return getElement(this); }\n};\nDiscordTenorVideo.style = discordTenorVideoCss;\n\nconst discordThreadCss = \".discord-thread{background-color:#2f3136;border-radius:4px;cursor:pointer;margin-top:8px;max-width:480px;min-width:0;padding:8px;display:inline-flex;width:fit-content;flex-direction:column}.discord-light-theme .discord-thread{background-color:#f2f3f5}.discord-thread .discord-thread-top{display:flex}.discord-thread .discord-thread-bottom{font-size:0.875rem;line-height:1.125rem;align-items:center;color:#b9bbbe;display:flex;margin-top:2px;white-space:nowrap}.discord-light-theme .discord-thread-bottom{color:#4f5660}.discord-thread .discord-thread-name{font-size:0.875rem;font-weight:600;line-height:1.125rem;color:white;margin-right:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.discord-light-theme .discord-thread-name{color:#060607}.discord-thread .discord-thread-cta{color:#00aff4;flex-shrink:0;font-size:0.875rem;font-weight:600;line-height:1.125rem}.discord-thread:hover .discord-thread-cta{text-decoration:underline}\";\n\nconst DiscordThread = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The name of the thread.\n     */\n    this.name = 'Thread';\n    /**\n     * The the text within the call to action text. (i.e. 'See Thread' or 'x Messages')\n     */\n    this.cta = 'See Thread';\n  }\n  render() {\n    return (h(Host, { class: \"discord-thread\" }, h(\"div\", { class: \"discord-thread-top\" }, h(\"span\", { class: \"discord-thread-name\" }, this.name), h(\"span\", { class: \"discord-thread-cta\", \"aria-hidden\": \"true\" }, this.cta, \" \\u203A\")), h(\"span\", { class: \"discord-thread-bottom\" }, h(\"slot\", null))));\n  }\n  get el() { return getElement(this); }\n};\nDiscordThread.style = discordThreadCss;\n\nconst discordThreadMessageCss = \".discord-thread-message{height:18px;min-width:0;display:flex;align-items:center;font-size:0.875rem;line-height:1.125rem}.discord-thread-message .discord-thread-message-avatar{margin-right:8px;flex:0 0 auto;width:16px;height:16px;border-radius:50%;user-select:none}.discord-thread-message .discord-thread-message-username{flex-shrink:0;font-size:inherit;line-height:inherit;margin-right:0.25rem;opacity:0.64;color:white;display:inline;vertical-align:baseline;position:relative;overflow:hidden}.discord-light-theme .discord-thread-message .discord-thread-message-username{color:#060607}.discord-thread-message .discord-application-tag{background-color:#5865f2;color:#fff;font-size:0.65em;margin-right:5px;border-radius:3px;line-height:100%;text-transform:uppercase;display:flex;align-items:center;height:0.9375rem;padding:0 0.275rem;margin-top:0.075em;border-radius:0.1875rem}.discord-thread-message .discord-application-tag-verified{display:inline-block;width:0.9375rem;height:0.9375rem;margin-left:-0.25rem}.discord-thread-message .discord-thread-message-content{display:flex;align-items:baseline}.discord-thread-message .discord-message-edited{color:#72767d;font-size:10px;margin-left:5px}.discord-thread-message .discord-thread-message-timestamp{color:#72767d;flex-shrink:0;margin-left:8px;font-size:0.875rem;line-height:1.125rem}.discord-light-theme .discord-thread-message .discord-thread-message-timestamp,.discord-light-theme .discord-thread-message .discord-message-edited{color:#747f8d}\";\n\nconst DiscordThreadMessage = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The message author's username.\n     * @default 'User'\n     */\n    this.author = 'User';\n    /**\n     * Whether the message author is a bot or not.\n     * Only works if `server` is `false` or `undefined`.\n     */\n    this.bot = false;\n    /**\n     * Whether the message author is a server crosspost webhook or not.\n     * Only works if `bot` is `false` or `undefined`.\n     */\n    this.server = false;\n    /**\n     * Whether the bot is verified or not.\n     * Only works if `bot` is `true`\n     */\n    this.verified = false;\n    /**\n     * Whether the message has been edited or not.\n     */\n    this.edited = false;\n    /**\n     * The relative timestamp of the message.\n     */\n    this.relativeTimestamp = '1m ago';\n  }\n  render() {\n    var _a, _b;\n    const resolveAvatar = (avatar) => { var _a, _b; return (_b = (_a = avatars[avatar]) !== null && _a !== void 0 ? _a : avatar) !== null && _b !== void 0 ? _b : avatars.default; };\n    const defaultData = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\n    const profileData = (_a = Reflect.get(profiles, this.profile)) !== null && _a !== void 0 ? _a : {};\n    const profile = Object.assign(Object.assign(Object.assign({}, defaultData), profileData), { avatar: resolveAvatar((_b = profileData.avatar) !== null && _b !== void 0 ? _b : this.avatar) });\n    return (h(Host, { class: \"discord-thread-message\" }, h(\"img\", { src: profile.avatar, class: \"discord-thread-message-avatar\", alt: profile.author }), h(Fragment, null, profile.bot && !profile.server && (h(\"span\", { class: \"discord-application-tag\" }, profile.verified && h(VerifiedTick, null), \"Bot\")), profile.server && !profile.bot && h(\"span\", { class: \"discord-application-tag\" }, \"Server\")), h(\"span\", { class: \"discord-thread-message-username\", style: { color: profile.roleColor } }, profile.author), h(\"div\", { class: \"discord-thread-message-content\" }, h(\"slot\", null), this.edited ? h(\"span\", { class: \"discord-message-edited\" }, \"(edited)\") : ''), h(\"span\", { class: \"discord-thread-message-timestamp\" }, this.relativeTimestamp)));\n  }\n  get el() { return getElement(this); }\n};\nDiscordThreadMessage.style = discordThreadMessageCss;\n\nconst discordTimeCss = \".discord-time{background-color:#ffffff0f;border-radius:3px;padding:0 2px}\";\n\nconst DiscordTime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: \"discord-time\" }, h(\"slot\", null)));\n  }\n};\nDiscordTime.style = discordTimeCss;\n\nconst DiscordUnderlined = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(\"u\", null, h(\"slot\", null)));\n  }\n};\n\nexport { DiscordActionRow as discord_action_row, DiscordAttachment as discord_attachment, DiscordAttachments as discord_attachments, DiscordBold as discord_bold, DiscordButton as discord_button, DiscordCommand as discord_command, DiscordCustomEmoji as discord_custom_emoji, DiscordEmbed as discord_embed, DiscordEmbedDescription as discord_embed_description, DiscordEmbedField as discord_embed_field, DiscordEmbedFields as discord_embed_fields, DiscordEmbedFooter as discord_embed_footer, DiscordInlineCode as discord_inline_code, DiscordInvite as discord_invite, DiscordItalic as discord_italic, DiscordMention as discord_mention, DiscordMessage as discord_message, DiscordMessages as discord_messages, DiscordQuote as discord_quote, DiscordReaction as discord_reaction, DiscordReactions as discord_reactions, DiscordReply as discord_reply, DiscordSpoiler as discord_spoiler, DiscordSystemMessage as discord_system_message, DiscordTenorVideo as discord_tenor_video, DiscordThread as discord_thread, DiscordThreadMessage as discord_thread_message, DiscordTime as discord_time, DiscordUnderlined as discord_underlined };\n"],"sourceRoot":""}